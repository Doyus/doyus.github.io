<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>几种js渲染方式的demo</title>
    <link href="/2022/09/29/render_python/"/>
    <url>/2022/09/29/render_python/</url>
    
    <content type="html"><![CDATA[<p>@<a href="%E5%87%A0%E7%A7%8Djs%E6%B8%B2%E6%9F%93%E6%96%B9%E5%BC%8F%E7%9A%84demo">TOC</a></p><h1 id="使用selenium"><a href="#使用selenium" class="headerlink" title="使用selenium"></a>使用selenium</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> selenium.webdriver<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> selenium.webdriver<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Spider</span>(<span class="hljs-params">object</span>):</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self</span>):</span><br>        self.spidername=<span class="hljs-string">&quot;xxx_com&quot;</span><br>        self.chromedriver_path = Chrome_path.chrome_path()<br>        self.url = <span class="hljs-string">&#x27;http://www.xxx.com&#x27;</span><br>        <span class="hljs-comment"># self.chromedriver_path = r&quot;D:\cz_project\singleSpider\tool\chromedriver_win32\chromedriver.exe&quot;</span><br>        options = selenium.webdriver.ChromeOptions()<br>        <span class="hljs-comment"># options.add_experimental_option(&quot;excludeSwitches&quot;, [&quot;enable-automation&quot;])</span><br>        <span class="hljs-comment"># options.add_experimental_option(&#x27;useAutomationExtension&#x27;, False)</span><br>        options.add_argument(<span class="hljs-string">&#x27;window-size=1200x2000&#x27;</span>)  <span class="hljs-comment"># 指定浏览器分辨率</span><br>        options.add_argument(<span class="hljs-string">&#x27;--disable-gpu&#x27;</span>)  <span class="hljs-comment"># 谷歌文档提到需要加上这个属性来规避bug</span><br>        <span class="hljs-comment"># options.add_argument(&#x27;--hide-scrollbars&#x27;)  # 隐藏滚动条, 应对一些特殊页面</span><br>        <span class="hljs-comment"># options.add_argument(&#x27;blink-settings=imagesEnabled=false&#x27;)  # 不加载图片, 提升速度</span><br>        <span class="hljs-comment"># options.add_argument(&#x27;--headless&#x27;)</span><br>        self.browser = selenium.webdriver.Chrome(options=options, executable_path=self.chromedriver_path)<br>        script = <span class="hljs-string">&#x27;Object.defineProperty(navigator, &quot;webdriver&quot;, &#123;get:()=&gt;false,&#125;);&#x27;</span><br>        self.browser.execute_script(script)<br>        <br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_html</span>(<span class="hljs-params">self, url</span>):</span><br>        self.browser.set_window_size(<span class="hljs-number">1200</span>, <span class="hljs-number">1000</span>)<br>        self.brower.get(url)<br>        time.sleep(<span class="hljs-number">0.8</span>)<br>        detail_html = self.brower.page_source<br>        print(detail_html)<br><br></code></pre></td></tr></table></figure><h1 id="使用requests-html（基于pyppeteer）"><a href="#使用requests-html（基于pyppeteer）" class="headerlink" title="使用requests_html（基于pyppeteer）"></a>使用requests_html（基于pyppeteer）</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> requests_html <span class="hljs-keyword">import</span> HTMLSession<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Spider</span>():</span><br>    <br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self</span>):</span><br>        self.session = HTMLSession()<br>        <br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_html</span>(<span class="hljs-params">self, url</span>):</span><br>        obj = self.session.get(url)<br>        obj.encoding = <span class="hljs-string">&#x27;utf-8&#x27;</span><br>        obj.html.render(sleep=<span class="hljs-number">0.1</span>)<br>        print(obj.html.html)<br></code></pre></td></tr></table></figure><h1 id="使用splash"><a href="#使用splash" class="headerlink" title="使用splash"></a>使用splash</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Spider</span>()</span><br><span class="hljs-class">    <span class="hljs-title">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self</span>):</span><br>        self.script =  <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        splash:go(args.url)</span><br><span class="hljs-string">        splash:wait(1)</span><br><span class="hljs-string">        return splash:html()</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        <br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_html</span>(<span class="hljs-params">self</span>):</span><br>        resp = requests.post(<span class="hljs-string">&#x27;http://xxx.xxx.xxx.xxx:8050//run&#x27;</span>, json=&#123;<br>            <span class="hljs-string">&#x27;lua_source&#x27;</span>: self.script,<br>            <span class="hljs-string">&#x27;url&#x27;</span>: <span class="hljs-string">&#x27;https://www.yuncaitong.cn/publish/demand.shtml&#x27;</span><br>        &#125;)<br>        png_data = resp.text<br></code></pre></td></tr></table></figure><h1 id="使用pyppeteer"><a href="#使用pyppeteer" class="headerlink" title="使用pyppeteer"></a>使用pyppeteer</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> asyncio<br><span class="hljs-keyword">from</span> pyppeteer <span class="hljs-keyword">import</span> launch<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Spider</span>():</span><br><br>    <span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_html</span>(<span class="hljs-params">self, url</span>):</span><br>        self.browser = <span class="hljs-keyword">await</span> launch()<br>        page = <span class="hljs-keyword">await</span> self.browser.newPage()<br>        <span class="hljs-keyword">await</span> page.goto(url)<br>        content = <span class="hljs-keyword">await</span> page.content()<br>        print(content)<br>        dimensions = <span class="hljs-keyword">await</span> page.evaluate(<span class="hljs-string">&#x27;&#x27;&#x27;() =&gt; &#123;</span><br><span class="hljs-string">            return &#123;</span><br><span class="hljs-string">                width: document.documentElement.clientWidth,</span><br><span class="hljs-string">                height: document.documentElement.clientHeight,</span><br><span class="hljs-string">                deviceScaleFactor: window.devicePixelRatio,</span><br><span class="hljs-string">            &#125;</span><br><span class="hljs-string">        &#125;&#x27;&#x27;&#x27;</span>)<br>        print(dimensions)<br>        <span class="hljs-keyword">await</span> self.browser.close()<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    spider = Spider()<br>    asyncio.get_event_loop().run_until_complete(spider.get_html(<span class="hljs-string">&quot;http://www.baidu.com&quot;</span>))<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
